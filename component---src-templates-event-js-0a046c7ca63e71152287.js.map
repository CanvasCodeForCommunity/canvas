{"version":3,"sources":["webpack:///./src/components/events/ImageCardComponent.js","webpack:///./src/components/events/ImageHeaderComponent.js","webpack:///./src/templates/event.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/Colors.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/codeforcommunity.png","webpack:///./src/components/seo.js","webpack:///./src/components/NavBar.js","webpack:///./src/components/layout.js","webpack:///./src/components/withRoot.js","webpack:///./src/components/getPageContext.js","webpack:///./src/components/commons/Image.js"],"names":["ImageCardComponent","render","cover_img","this","props","classes","react_default","a","createElement","Grid_default","item","xs","sm","Card_default","className","card","CardActionArea_default","Image","filename","Component","withStyles","theme","maxWidth","ImageHeaderComponent","_this$props","siteTitle","location","siteDescription","date","header","container","Typography_default","variant","whiteText","background","primary","marginBottom","height","margin","padding","display","flexDirection","justifyContent","color","IndividualEvent","createImageGrid","images","root","spacing","map","image","index","events_ImageCardComponent","node","relativePath","data","event","frontmatter","edges","layout","seo","title","events_ImageHeaderComponent","description","pageQuery","withRoot","flexGrow","paper","unit","textAlign","palette","text","secondary","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","hoverPrimary","whiteSmoke","grey13","royalBlue","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","p","SEO","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","NavItem","to","gatsby_browser_entry","links","Button_default","navItemBtn","NavItemMobile","_ref2","ListItem_default","button","key","ListItemText_default","NavBoxItem","_ref3","whiteLinks","navBoxItemBtn","NavBar","state","left","toggleDrawer","side","open","_this$setState","_this","setState","mobileDrawerItems","list","List_default","NavBar_NavItemMobile","AppBar_default","position","appBar","Toolbar_default","sectionMobile","IconButton_default","onClick","aria-label","Menu_default","siteIcon","src","codeForCommunity","noWrap","grow","sectionDesktop","NavBar_NavItem","NavBar_NavBoxItem","Drawer_default","onClose","tabIndex","role","onKeyDown","_sectionDesktop","_sectionMobile","_siteIcon","_siteTitle","width","backgroundColor","textDecoration","marginRight","breakpoints","up","alignItems","textTransform","marginLeft","&:hover","Layout","components_NavBar","_755544856","_React$Component","WithRoot","call","muiPageContext","getPageContext","_proto","prototype","componentDidMount","jssStyles","document","querySelector","parentNode","removeChild","react_jss_lib_JssProvider__WEBPACK_IMPORTED_MODULE_3___default","generateClassName","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","sheetsManager","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_2___default","createMuiTheme","light","purple","main","dark","typography","useNextVariants","createPageContext","Map","sheetsRegistry","SheetsRegistry","createGenerateClassName","process","browser","global","__INIT_MATERIAL_UI__","react__WEBPACK_IMPORTED_MODULE_4___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","find","includes","imageSizes","childImageSharp","sizes","gatsby_image__WEBPACK_IMPORTED_MODULE_6___default","alt","classProps","_public_static_d_1345654842_json__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"8LAUA,IAMMA,kLAEJC,OAAA,WAAS,IACCC,EAAcC,KAAKC,MAAnBF,UACAG,EAAYF,KAAKC,MAAjBC,QACR,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAMO,UAAWT,EAAQU,MACvBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACED,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,SAAUhB,WATIiB,aAuBlBC,uBA7BA,SAAAC,GAAK,MAAK,CACvBN,KAAM,CACJO,SAAU,OA2BCF,CAAmBpB,8BC/BlC,IAoBMuB,kLAEJtB,OAAA,WAAS,IAAAuB,EACgDrB,KAAKC,MAApDqB,EADDD,EACCC,UAAWC,EADZF,EACYE,SAAUC,EADtBH,EACsBG,gBAAiBC,EADvCJ,EACuCI,KACtCvB,EAAYF,KAAKC,MAAjBC,QAER,OACEC,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQwB,QACtBvB,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQyB,WACtBxB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAYyB,QAAQ,KAAKlB,UAAWT,EAAQ4B,WACzCR,GAGHnB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAYyB,QAAQ,KAAKlB,UAAWT,EAAQ4B,WACzCP,EADH,MACgBE,GAGhBtB,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAYyB,QAAQ,QAAQlB,UAAWT,EAAQ4B,WAC5CN,SAlBsBR,aAiCpBC,uBArDA,SAAAC,GAAK,MAAK,CACvBQ,OAAQ,CACNK,WAAYC,IACZC,aAAc,UACdC,OAAQ,QAEVP,UAAW,CACTQ,OAAQ,SACRC,QAAS,oBACTjB,SAAU,IACVkB,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBL,OAAQ,QAEVJ,UAAW,CACTU,MAAO,WAqCIvB,CAAmBG,sEChDlC,IAcMqB,8JACJC,gBAAkB,SAACxC,EAASyC,GAC1B,OACExC,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ0C,MACtBzC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAMuB,WAAS,EAACkB,QAAS,IACtBF,EAAOG,IAAI,SAACC,EAAOC,GAAR,OACV7C,EAAAC,EAAAC,cAAC4C,EAAD,CAAoBlD,UAAWgD,EAAMG,KAAKC,gIAMpDrD,OAAA,WAAS,IACCI,EAAYF,KAAKC,MAAjBC,QACAkD,EAASpD,KAAKC,MAAdmD,KACFC,EAAQD,EAAKC,MAAMC,YACnBX,EAASS,EAAKT,OAAOY,MAC3B,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAKC,MAAOL,EAAMK,QAClBvD,EAAAC,EAAAC,cAACsD,EAAD,CACErC,UAAW+B,EAAMK,MACjBnC,SAAU8B,EAAM9B,SAChBC,gBAAiB6B,EAAMO,YACvBnC,KAAM4B,EAAM5B,OAEbzB,KAAK0C,gBAAgBxC,EAASyC,QA1BT3B,aAoCjB6C,GAHEC,sBAAS7C,qBA/CT,SAAAC,GAAK,MAAK,CACvB0B,KAAM,CACJmB,SAAU,EACV5B,OAAQ,SACRhB,SAAU,IACViB,QAAS,qBAEX4B,MAAO,CACL5B,QAA8B,EAArBlB,EAAM2B,QAAQoB,KACvBC,UAAW,SACX1B,MAAOtB,EAAMiD,QAAQC,KAAKC,aAqCNpD,CAAmBwB,IAGrB,gDC/DtB6B,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,IAAAQ,EAAAR,EAAAM,EAAAC,GAAAP,EAAAC,EAAAC,EAAA,sBAAAM,EAAA1E,IAAAkE,EAAA,KAAAA,EAAA,GAcyBS,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiBlC,EAAuBiC,EAAvBjC,KAAMmC,EAAiBF,EAAjBE,MAAOzF,EAAUuF,EAAVvF,OACzD0F,EAAYpC,EACdA,EAAKA,KACLkC,EAAgBC,IAAUD,EAAgBC,GAAOnC,KAErD,OACEuB,EAAAvE,EAAAC,cAACsE,EAAAvE,EAAMqF,SAAP,KACGD,GAAa1F,EAAO0F,IACnBA,GAAab,EAAAvE,EAAAC,cAAA,qCAKrB,IAAMoE,EAAc,SAAAxE,GAAS,IACnBmD,EAAkCnD,EAAlCmD,KAAMmC,EAA4BtF,EAA5BsF,MAAOzF,EAAqBG,EAArBH,OAAQ4F,EAAazF,EAAbyF,SAE7B,OACEf,EAAAvE,EAAAC,cAAC4E,EAAmBU,SAApB,KACG,SAAAL,GAAe,OACdX,EAAAvE,EAAAC,cAAC+E,EAAD,CACEhC,KAAMA,EACNmC,MAAOA,EACPzF,OAAQA,GAAU4F,EAClBJ,gBAAiBA,yCCxC3BhB,EAAAC,EAAAC,EAAA,sBAAAxC,IAAAsC,EAAAC,EAAAC,EAAA,sBAAAoB,IAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAAxB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAA,IAAM/D,EAAU,UACV4D,EAAe,UACfC,EAAa,UACbC,EAAS,UACTC,EAAY,+BCLlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,gKCsBhCK,UAjBU,SAAAhB,GAAiC,IAA9B9D,EAA8B8D,EAA9B9D,SAAU+E,EAAoBjB,EAApBiB,cACpC,OAAKA,EAGEpB,IAAM7E,cAAckG,IAApBC,OAAAC,OAAA,CACLlF,WACA+E,iBACGA,EAAcI,OALV,2BCPXT,EAAAC,QAAiB5B,EAAAqC,EAAuB,yJCKxC,SAASC,EAATvB,GAA2D,IAA5CzB,EAA4CyB,EAA5CzB,YAAaiD,EAA+BxB,EAA/BwB,KAAMC,EAAyBzB,EAAzByB,KAAMC,EAAmB1B,EAAnB0B,SAAUrD,EAAS2B,EAAT3B,MAChD,OACEsD,EAAA5G,EAAAC,cAAC4G,EAAA,EAAD,CACE1B,MAAO2B,EACPpH,OAAQ,SAAAsD,GACN,IAAM+D,EACJvD,GAAeR,EAAKgE,KAAKC,aAAazD,YACxC,OACEoD,EAAA5G,EAAAC,cAACiH,EAAAlH,EAAD,CACEmH,eAAgB,CACdV,QAEFnD,MAAOA,EACP8D,cAAa,QAAUpE,EAAKgE,KAAKC,aAAa3D,MAC9CoD,KAAM,CACJ,CACEW,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAAShE,GAEX,CACEiE,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAAStE,EAAKgE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAAShE,GAEX,CACE+D,KAAM,sBACNC,QAASP,IAGVU,OACCd,EAASe,OAAS,EACd,CACEL,KAAM,WACNC,QAASX,EAASgB,KAAK,OAEzB,IAELF,OAAOf,MAtDlB1D,KAAA4E,IA8DJpB,EAAIqB,aAAe,CACjBpB,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGH,MAEf,IAAMM,EAAY,2jBChElB,IAkEMgB,EAAU,SAAA7C,GAA4B,IAAzB8C,EAAyB9C,EAAzB8C,GAAIzE,EAAqB2B,EAArB3B,MAAOxD,EAAcmF,EAAdnF,QAC5B,OACEC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMD,GAAI,IAAMA,EAAIxH,UAAWT,EAAQmI,OACrClI,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAQoC,MAAM,UAAU7B,UAAWT,EAAQqI,YACxC7E,KAMH8E,EAAgB,SAAAC,GAA4B,IAAzBN,EAAyBM,EAAzBN,GAAIzE,EAAqB+E,EAArB/E,MAAOxD,EAAcuI,EAAdvI,QAClC,OACEC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMD,GAAI,IAAMA,EAAIxH,UAAWT,EAAQmI,OACrClI,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CAAUuI,QAAM,EAACC,IAAKlF,GACpBvD,EAAAC,EAAAC,cAACwI,EAAAzI,EAAD,CAAc4B,QAAS0B,EAAO/C,UAAWT,EAAQqI,gBAMnDO,EAAa,SAAAC,GAA4B,IAAzBZ,EAAyBY,EAAzBZ,GAAIzE,EAAqBqF,EAArBrF,MAAOxD,EAAc6I,EAAd7I,QAC/B,OACEC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMD,GAAI,IAAMA,EAAIxH,UAAWT,EAAQ8I,YACrC7I,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAQoC,MAAM,UAAU7B,UAAWT,EAAQ+I,eACxCvF,KAMHwF,8JACJC,MAAQ,CACNC,MAAM,KAGRC,aAAe,SAACC,EAAMC,GAAP,OAAgB,WAAM,IAAAC,EACnCC,EAAKC,WAALF,EAAA,IACGF,GAAOC,EADVC,kHAKF1J,OAAA,WAAS,IACCwB,EAActB,KAAKC,MAAnBqB,UACApB,EAAYF,KAAKC,MAAjBC,QAEFyJ,EACJxJ,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ0J,MACtBzJ,EAAAC,EAAAC,cAACwJ,EAAAzJ,EAAD,KACED,EAAAC,EAAAC,cAACyJ,EAAD,CAAe3B,GAAG,GAAGzE,MAAM,OAAOxD,QAASA,IAE3CC,EAAAC,EAAAC,cAACyJ,EAAD,CAAe3B,GAAG,QAAQzE,MAAM,QAAQxD,QAASA,IAEjDC,EAAAC,EAAAC,cAACyJ,EAAD,CAAe3B,GAAG,aAAazE,MAAM,aAAaxD,QAASA,IAE3DC,EAAAC,EAAAC,cAACyJ,EAAD,CAAe3B,GAAG,UAAUzE,MAAM,UAAUxD,QAASA,MAK3D,OACEC,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ0C,MACtBzC,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CAAQ4J,SAAS,SAASrJ,UAAWT,EAAQ+J,QAC3C9J,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,KAEED,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQiK,eACtBhK,EAAAC,EAAAC,cAAC+J,EAAAhK,EAAD,CACEiK,QAASrK,KAAKqJ,aAAa,QAAQ,GACnC7G,MAAM,UACN8H,aAAW,QAEXnK,EAAAC,EAAAC,cAACkK,EAAAnK,EAAD,CAAUoC,MAAM,gBAKpBrC,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,CAAQO,UAAWT,EAAQsK,SAAUhI,MAAM,WACzCrC,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMD,GAAG,IAAIxH,UAAWT,EAAQmI,OAC9BlI,EAAAC,EAAAC,cAAA,OAAKoK,IAAKC,QAKdvK,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAYyB,QAAQ,KAAK8I,QAAM,EAAChK,UAAWT,EAAQoB,WACjDnB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMD,GAAG,IAAIxH,UAAWT,EAAQmI,OAC7B/G,IAILnB,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ0K,OAGxBzK,EAAAC,EAAAC,cAAA,OAAKM,UAAWT,EAAQ2K,gBACtB1K,EAAAC,EAAAC,cAACyK,EAAD,CAASpH,MAAM,OAAOyE,GAAG,GAAGjI,QAASA,IAErCC,EAAAC,EAAAC,cAACyK,EAAD,CAASpH,MAAM,QAAQyE,GAAG,QAAQjI,QAASA,IAE3CC,EAAAC,EAAAC,cAACyK,EAAD,CAASpH,MAAM,aAAayE,GAAG,aAAajI,QAASA,IAErDC,EAAAC,EAAAC,cAAC0K,EAAD,CAAYrH,MAAM,UAAUyE,GAAG,UAAUjI,QAASA,KAIpDC,EAAAC,EAAAC,cAAC2K,EAAA5K,EAAD,CACEmJ,KAAMvJ,KAAKmJ,MAAMC,KACjB6B,QAASjL,KAAKqJ,aAAa,QAAQ,IAGnClJ,EAAAC,EAAAC,cAAA,OACE6K,SAAU,EACVC,KAAK,SACLd,QAASrK,KAAKqJ,aAAa,QAAQ,GACnC+B,UAAWpL,KAAKqJ,aAAa,QAAQ,IAEpCM,WAnFI3I,aAiGrBkI,EAAOjB,aAAe,CACpB3G,UAAW,IAGEL,2BArMA,SAAAC,GAAK,IAAAmK,EAAAC,EAAAC,EAAAC,EAAA,MAAK,CACvB5I,KAAM,CACJ6I,MAAO,QAETxB,OAAQ,CACNyB,gBAAiB,SAEnBd,KAAM,CACJ7G,SAAU,GAEZsE,MAAO,CACLsD,eAAgB,OAChBnJ,MAAO,SAETwG,WAAY,CACV2C,eAAgB,OAChBnJ,MAAO,SAETqI,gBAAcQ,EAAA,CACZhJ,QAAS,OACTuJ,YAAa,GAFDP,EAGXnK,EAAM2K,YAAYC,GAAG,OAAQ,CAC5BzJ,QAAS,OACTuJ,YAAa,GACbG,WAAY,UANFV,GASdlB,eAAamB,EAAA,CACXjJ,QAAS,OACTuJ,YAAa,IAFFN,EAGVpK,EAAM2K,YAAYC,GAAG,OAAQ,CAC5BzJ,QAAS,QAJAiJ,GAOb/C,WAAY,CACVyD,cAAe,cAEjB/C,cAAe,CACbyC,gBAAiB1J,IACjBI,QAAS,WACT6J,WAAY,EACZL,YAAa,EACbI,cAAe,aACfE,UAAW,CACTR,gBAAiB9F,MAGrBgE,KAAM,CACJ6B,MAAO,KAETjB,UAAQe,EAAA,CACNlJ,QAAS,QADHkJ,EAELrK,EAAM2K,YAAYC,GAAG,OAAQ,CAC5BzJ,QAAS,OACToJ,MAAO,OACPvJ,OAAQ,OALJqJ,GAQRjK,WAASkK,EAAA,CACPnJ,QAAS,QADFmJ,EAENtK,EAAM2K,YAAYC,GAAG,OAAQ,CAC5BzJ,QAAS,QAHJmJ,KA2IIvK,CAAmBiI,UC3LnBiD,IAxBA,SAAA9G,GAAA,IAAGK,EAAHL,EAAGK,SAAH,OACbvF,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CACE7C,MAAK,YASLzF,OAAQ,SAAAsD,GAAI,OACVjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqF,SAAA,KACEtF,EAAAC,EAAAC,cAAC+L,EAAD,CAAQ9K,UAAW8B,EAAKgE,KAAKC,aAAa3D,QAC1CvD,EAAAC,EAAAC,cAAA,WAAMqF,KAbZtC,KAAAiJ,iHCkCavI,IApCf,SAAkB9C,GAiChB,OAjC2B,SAAAsL,WAEzB,SAAAC,EAAYtM,GAAO,IAAAwJ,EAAA,OACjBA,EAAA6C,EAAAE,KAAAxM,KAAMC,IAAND,MACKyM,eAAiBC,cAFLjD,IAFM6C,KAAAC,gFAAA,IAAAI,EAAAJ,EAAAK,UAAA,OAAAD,EAOzBE,kBAAA,WAEE,IAAMC,EAAYC,SAASC,cAAc,oBACrCF,GAAaA,EAAUG,YACzBH,EAAUG,WAAWC,YAAYJ,IAXZH,EAezB7M,OAAA,WACE,OACE6E,EAAAvE,EAAAC,cAAC8M,EAAA/M,EAAD,CAAagN,kBAAmBpN,KAAKyM,eAAeW,mBAGlDzI,EAAAvE,EAAAC,cAACgN,EAAA,iBAAD,CACEnM,MAAOlB,KAAKyM,eAAevL,MAC3BoM,cAAetN,KAAKyM,eAAea,eAGnC3I,EAAAvE,EAAAC,cAACkN,EAAAnN,EAAD,MACAuE,EAAAvE,EAAAC,cAACW,EAAchB,KAAKC,UA1BHsM,EAAA,CACJrH,IAAMlE,mKCAzBE,EAAQsM,yBAAe,CAC3BrJ,QAAS,CACPnC,QAAS,CACPyL,MAAOC,IAAO,KACdC,KAAMD,IAAO,KACbE,KAAMF,IAAO,MAEfrJ,UAAW,CACTsJ,KAAM,SAGVE,WAAY,CACVC,iBAAiB,KAIrB,SAASC,IACP,MAAO,CACL7M,QAEAoM,cAAe,IAAIU,IAEnBC,eAAgB,IAAIC,iBAEpBd,kBAAmBe,qCAIR,SAASzB,IAGtB,OAAK0B,EAAQC,SAKRC,EAAOC,uBACVD,EAAOC,qBAAuBR,KAGzBO,EAAOC,sBARLR,+ICQIjN,IArCD,SAAAb,GAAK,OACjBuO,EAAApO,EAAAC,cAACoO,EAAA,EAAD,CACElJ,MAAK,aAiBLzF,OAAQ,SAAAsD,GACN,IAAML,EAAQK,EAAKT,OAAOY,MAAMmL,KAAK,SAAA9J,GACnC,OAAOA,EAAE1B,KAAKC,aAAawL,SAAS1O,EAAMc,YAE5C,IAAKgC,EACH,OAAO,KAGT,IAAM6L,EAAa7L,EAAMG,KAAK2L,gBAAgBC,MAC9C,OAAON,EAAApO,EAAAC,cAAC0O,EAAA3O,EAAD,CAAK4O,IAAK/O,EAAM+O,IAAKF,MAAOF,EAAYjO,UAAWV,EAAMgP,cA3BpE7L,KAAA8L","file":"component---src-templates-event-js-0a046c7ca63e71152287.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Image from '../commons/Image';\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 400,\n  },\n});\n\nclass ImageCardComponent extends Component {\n\n  render() {\n    const { cover_img } = this.props;\n    const { classes } = this.props;\n    return (\n      <Grid item xs={12} sm={4}>\n        <Card className={classes.card}>\n          <CardActionArea>\n            <Image filename={cover_img} />\n\n          </CardActionArea>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nImageCardComponent.propTypes = {\n  cover_img: PropTypes.string.isRequired\n};\n\n//make this component available to the app\nexport default withStyles(styles)(ImageCardComponent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { primary } from '../../utils/Colors';\n\nconst styles = theme => ({\n  header: {\n    background: primary,\n    marginBottom: '1.45rem',\n    height: '30vh',\n  },\n  container: {\n    margin: '0 auto',\n    padding: '1.45rem 1.0875rem',\n    maxWidth: 960,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: '30vh',\n  },\n  whiteText: {\n    color: 'white',\n  },\n});\n\nclass ImageHeaderComponent extends Component {\n\n  render() {\n    const { siteTitle, location, siteDescription, date } = this.props;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.header}>\n        <div className={classes.container}>\n          <Typography variant=\"h3\" className={classes.whiteText}>\n            {siteTitle}\n          </Typography>\n\n          <Typography variant=\"h6\" className={classes.whiteText}>\n            {location} ∙ {date}\n          </Typography>\n\n          <Typography variant=\"body1\" className={classes.whiteText}>\n            {siteDescription}\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n}\n\nImageHeaderComponent.propTypes = {\n  siteTitle: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  siteDescription: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ImageHeaderComponent);\n","import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\n\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ImageCardComponent from '../components/events/ImageCardComponent';\nimport ImageHeaderComponent from '../components/events/ImageHeaderComponent';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport withRoot from '../components/withRoot';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    margin: '0 auto',\n    maxWidth: 960,\n    padding: '1.45rem 1.0875rem',\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\nclass IndividualEvent extends Component {\n  createImageGrid = (classes, images) => {\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={16}>\n          {images.map((image, index) => (\n            <ImageCardComponent cover_img={image.node.relativePath} />\n          ))}\n        </Grid>\n      </div>\n    );\n  };\n  render() {\n    const { classes } = this.props;\n    const { data } = this.props;\n    const event = data.event.frontmatter;\n    const images = data.images.edges;\n    return (\n      <Layout>\n        <SEO title={event.title} />\n        <ImageHeaderComponent\n          siteTitle={event.title}\n          location={event.location}\n          siteDescription={event.description}\n          date={event.date}\n        />\n        {this.createImageGrid(classes, images)}\n      </Layout>\n    );\n  }\n}\n\n//make this component available to the app\nexport default withRoot(withStyles(styles)(IndividualEvent));\n\n//query for index.md for that event and the images with it.\nexport const pageQuery = graphql`\n  query EventPostBySlug($slug: String!, $absolutePathRegex: String!) {\n    event: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        date(formatString: \"DD.MM.YYYY\")\n        title\n        description\n        location\n      }\n    }\n\n    images: allFile(\n      sort: { order: ASC, fields: [absolutePath] }\n      filter: {\n        absolutePath: { regex: $absolutePathRegex }\n        extension: { eq: \"jpg\" }\n      }\n    ) {\n      edges {\n        node {\n          relativePath\n          name\n          childImageSharp {\n            sizes(maxWidth: 600) {\n              ...GatsbyImageSharpSizes\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","\nconst primary = '#7955B4';\nconst hoverPrimary = '#4E3774'\nconst whiteSmoke = '#f5f5f5'\nconst grey13 = '#212121'\nconst royalBlue = '#3266D5'\n\nexport {\n  primary,\n  hoverPrimary,\n  whiteSmoke,\n  grey13,\n  royalBlue\n};","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/codeforcommunity-6b589de1e82d0b1f0c033f29dfebd02c.png\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport { primary, hoverPrimary } from '../utils/Colors';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport codeForCommunity from '../images/codeforcommunity.png';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  appBar: {\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  links: {\n    textDecoration: 'none',\n    color: 'black',\n  },\n  whiteLinks: {\n    textDecoration: 'none',\n    color: 'white',\n  },\n  sectionDesktop: {\n    display: 'none',\n    marginRight: 0,\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      marginRight: 20,\n      alignItems: 'center',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    marginRight: 10,\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  navItemBtn: {\n    textTransform: 'capitalize',\n  },\n  navBoxItemBtn: {\n    backgroundColor: primary,\n    padding: '5px 15px',\n    marginLeft: 5,\n    marginRight: 5,\n    textTransform: 'capitalize',\n    '&:hover': {\n      backgroundColor: hoverPrimary,\n    },\n  },\n  list: {\n    width: 200,\n  },\n  siteIcon: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      width: '20em',\n      height: '5em',\n    },\n  },\n  siteTitle: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nconst NavItem = ({ to, title, classes }) => {\n  return (\n    <Link to={'/' + to} className={classes.links}>\n      <Button color=\"inherit\" className={classes.navItemBtn}>\n        {title}\n      </Button>\n    </Link>\n  );\n};\n\nconst NavItemMobile = ({ to, title, classes }) => {\n  return (\n    <Link to={'/' + to} className={classes.links}>\n      <ListItem button key={title}>\n        <ListItemText primary={title} className={classes.navItemBtn} />\n      </ListItem>\n    </Link>\n  );\n};\n\nconst NavBoxItem = ({ to, title, classes }) => {\n  return (\n    <Link to={'/' + to} className={classes.whiteLinks}>\n      <Button color=\"inherit\" className={classes.navBoxItemBtn}>\n        {title}\n      </Button>\n    </Link>\n  );\n};\n\nclass NavBar extends Component {\n  state = {\n    left: false,\n  };\n\n  toggleDrawer = (side, open) => () => {\n    this.setState({\n      [side]: open,\n    });\n  };\n\n  render() {\n    const { siteTitle } = this.props;\n    const { classes } = this.props;\n\n    const mobileDrawerItems = (\n      <div className={classes.list}>\n        <List>\n          <NavItemMobile to=\"\" title=\"home\" classes={classes} />\n\n          <NavItemMobile to=\"about\" title=\"About\" classes={classes} />\n\n          <NavItemMobile to=\"programmes\" title=\"Programmes\" classes={classes} />\n\n          <NavItemMobile to=\"join_us\" title=\"Join Us\" classes={classes} />\n        </List>\n      </div>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            {/* Hamburger icon */}\n            <div className={classes.sectionMobile}>\n              <IconButton\n                onClick={this.toggleDrawer('left', true)}\n                color=\"inherit\"\n                aria-label=\"Menu\"\n              >\n                <MenuIcon color=\"secondary\" />\n              </IconButton>\n            </div>\n\n            {/* Site icon */}\n            <Button className={classes.siteIcon} color=\"inherit\">\n              <Link to=\"/\" className={classes.links}>\n                <img src={codeForCommunity} />\n              </Link>\n            </Button>\n\n            {/* Site title */}\n            <Typography variant=\"h6\" noWrap className={classes.siteTitle}>\n              <Link to=\"/\" className={classes.links}>\n                {siteTitle}\n              </Link>\n            </Typography>\n\n            <div className={classes.grow} />\n\n            {/* Right nav bar */}\n            <div className={classes.sectionDesktop}>\n              <NavItem title=\"Home\" to=\"\" classes={classes} />\n\n              <NavItem title=\"About\" to=\"about\" classes={classes} />\n\n              <NavItem title=\"Programmes\" to=\"programmes\" classes={classes} />\n\n              <NavBoxItem title=\"Join Us\" to=\"join_us\" classes={classes} />\n            </div>\n\n            {/*  Mobile Nav Drawer */}\n            <Drawer\n              open={this.state.left}\n              onClose={this.toggleDrawer('left', false)}\n            >\n\n              <div\n                tabIndex={0}\n                role=\"button\"\n                onClick={this.toggleDrawer('left', false)}\n                onKeyDown={this.toggleDrawer('left', false)}\n              >\n                {mobileDrawerItems}\n              </div>\n            </Drawer>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nNavBar.defaultProps = {\n  siteTitle: '',\n};\n\nexport default withStyles(styles)(NavBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport NavBar from './NavBar';\nimport '../css/layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <NavBar siteTitle={data.site.siteMetadata.title} />\n        <div>{children}</div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport getPageContext from './getPageContext';\n\nfunction withRoot(Component) {\n  class WithRoot extends React.Component {\n    constructor(props) {\n      super(props);\n      this.muiPageContext = getPageContext();\n    }\n\n    componentDidMount() {\n      // Remove the server-side injected CSS.\n      const jssStyles = document.querySelector('#jss-server-side');\n      if (jssStyles && jssStyles.parentNode) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n\n    render() {\n      return (\n        <JssProvider generateClassName={this.muiPageContext.generateClassName}>\n          {/* MuiThemeProvider makes the theme available down the React\n              tree thanks to React context. */}\n          <MuiThemeProvider\n            theme={this.muiPageContext.theme}\n            sheetsManager={this.muiPageContext.sheetsManager}\n          >\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n            <CssBaseline />\n            <Component {...this.props} />\n          </MuiThemeProvider>\n        </JssProvider>\n      );\n    }\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;","import { SheetsRegistry } from 'jss';\nimport { createMuiTheme, createGenerateClassName } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: purple[300],\n      main: purple[500],\n      dark: purple[700],\n    },\n    secondary: {\n      main: \"#000\",\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!global.__INIT_MATERIAL_UI__) {\n    global.__INIT_MATERIAL_UI__ = createPageContext();\n  }\n\n  return global.__INIT_MATERIAL_UI__;\n}","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\n\n/**\n * Generates an image with lazy loading. The images would automatically optimised.\n * Pass in 'filename' prop.\n */\n\nconst Image = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        images: allFile {\n          edges {\n            node {\n              relativePath\n              name\n              childImageSharp {\n                sizes(maxWidth: 600) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const image = data.images.edges.find(n => {\n        return n.node.relativePath.includes(props.filename);\n      });\n      if (!image) {\n        return null;\n      }\n\n      const imageSizes = image.node.childImageSharp.sizes;\n      return <Img alt={props.alt} sizes={imageSizes} className={props.classProps}/>;\n    }}\n  />\n);\n\nImage.propTypes = {\n  filename: PropTypes.string.isRequired,\n};\n\nexport default Image;\n"],"sourceRoot":""}